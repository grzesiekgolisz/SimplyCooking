@model SimplyCooking.Models.RecipeDetailsViewModel

@{
    ViewBag.Title = "Details";
}

<script src="~/Themes/ckeditor/ckeditor.js"></script>



<h2>@Html.DisplayFor(model => model.Recipe.Name)</h2>

<div>
    <h4></h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            Opis
        </dt>

        <dd>


            @Html.TextAreaFor(model => model.Recipe.Description, new { @class = "ckeditor", @disabled = true })
            @*@Html.ValidationMessageFor(model => model.Recipe.Description, "", new { @class = "text-danger" })*@

        </dd>

        <dt>
            Pora posiłku
        </dt>

        <dd>
            @if (Model.Recipe.TypeofdishesID == 1)
            {


                string wynik = "śniadanie";

                @Html.Raw(wynik);
            }


            @if (Model.Recipe.TypeofdishesID == 2)
            {
                string wynik = "Obiad";

                @Html.Raw(wynik);
            }

            @if (Model.Recipe.TypeofdishesID == 3)
            {
                string wynik = "Kolacja";

                @Html.Raw(wynik);
            }



        </dd>

        <dt>
            Kuchnia
        </dt>

        <dd>
            @if (Model.Recipe.TypeofmealsID == 1)
            {


                string wynik = "Tajska";

                @Html.Raw(wynik);
            }


            @if (Model.Recipe.TypeofmealsID == 2)
            {
                string wynik = "Włoska";

                @Html.Raw(wynik);
            }

            @if (Model.Recipe.TypeofmealsID == 3)
            {
                string wynik = "Chińska";

                @Html.Raw(wynik);
            }

        </dd>
        @foreach (var item in Model.Recipe.Photos)
        {
            <dt>
                @item.Title
            </dt>
            <dt>
                <img src="/Recipes/RetrieveImage/@item.PhotoId" alt="" height="100" width="200" />
            </dt>
        }
    </dl>
</div>
<p>
    <button type="button" class="btn btn-primary btn-lg" onclick="location.href='@Url.Action("Index", "Home")'">Powrót</button>
    <button type="button" class="btn btn-primary btn-lg" onclick="location.href='@Url.Action("Edit", "Recipes", new { id = Model.Recipe.RecipeID })'">Edytuj</button>
    <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">
        Dodaj zdjęcie
    </button>

    <!-- Modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Dodaj zdjęcie do przepisu</h4>
                </div>
                @using (Html.BeginForm("UploadPhoto", "Recipes", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.Hidden("RecipeId", Model.Recipe.RecipeID)
                    <div class="modal-body">
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Photo.Title, new { htmlAttributes = new { placeholder = "Tytuł zdjęcia", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Photo.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Photo.Description, new { htmlAttributes = new { placeholder = "Opis", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Photo.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Photo.Contents, new { htmlAttributes = new { placeholder = "Kontent", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Photo.Contents, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-10">
                            </div>
                            <input type="file" name="ImageData" id="ImageData" />
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Zamknij</button>
                            <input type="submit" class="btn btn-primary" value="Zapisz" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>


</p>
@*<div class="container">

        <img src="https://www.zajadam.pl/wp-content/uploads/hamburger-przepis.jpg" class="img-circle" alt="Cinque Terre" width="304" height="236">

    </div>*@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<div id="disqus_thread" style="background-color:lightgray; padding: 5px; "></div>
<script>

    /**
    *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
    *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/
    /*
    var disqus_config = function () {
    this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
    this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function () { // DON'T EDIT BELOW THIS LINE
        var d = document, s = d.createElement('script');
        s.src = 'https://simply-cooking-1.disqus.com/embed.js';
        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>


<script id="dsq-count-scr" src="//simply-cooking-1.disqus.com/count.js" async></script>