@model SimplyCooking.Models.RecipesCreateViewModel

@{
    ViewBag.Title = "Dodaj przepis";
}





@using (Html.BeginForm())

{
    @Html.AntiForgeryToken()
    <div class="container" style="background-color: rgba(255,255,255,0.5);">
        <div class="form-horizontal">
            <h1>Dodaj przepis</h1>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">

            </div>

            <div class="form-group">
                <div class="control-label col-md-2"> <h4>Nazwa przepisu</h4></div>
                <div class="col-md-10" style="margin-top:10px;">
                    @Html.EditorFor(model => model.Recipe.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Recipe.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2"> <h4>Sposób przygotowania</h4></div>
                <div class="col-md-10" style="margin-top:10px;">
                    @Html.TextAreaFor(model => model.Recipe.Description, new { @class = "ckeditor" })
                    @Html.ValidationMessageFor(model => model.Recipe.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="control-label col-md-2"> <h4>Składniki</h4></div>
                <div class="col-md-10" style="margin-top:10px;">
                    @Html.TextAreaFor(model => model.Recipe.Components, new { @class = "ckeditor" })
                    @Html.ValidationMessageFor(model => model.Recipe.Components, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2"> <h4>Pora posiłku</h4></div>
                <div class="col-md-10" style="margin-top:17px;">
                    
                    @Html.DropDownListFor(model => model.Recipe.TypeofdishesID, Model.TypeOfDisches, new { title = "Wybierz jedno z poniższych..." })

                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2"> <h4>Rodzaj posiłku</h4></div>
                <div class="col-md-10" style="margin-top:17px;">

                    @Html.DropDownListFor(model => model.Recipe.TypeofmealsID, Model.TypeOfMeals, new { title = "Wybierz jedno z poniższych..." })


                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2"> <h4>Narzędzia</h4></div>
                <div class="col-md-10" style="margin-top:17px;">

                    @Html.DropDownListFor(model => model.Recipe.EquipmentV2ID, Model.Equipment, new { title = "Wybierz z poniższych..." })


                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2"> <h4>Poziom trudności</h4></div>
                <div class="col-md-10">

                    @Html.EnumDropDownListFor(m => m.Recipe.DifficultyLevel, "Wybierz poziom", new { @class = "form-control" })

                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2"> <h4>Czas przygotowania (w minutach)</h4></div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Recipe.Time, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Recipe.Time, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group" style="float:right; margin-right:50px;">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Dodaj przepis" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}

<div>


</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/bootstrap-select.min.js"></script>
    <script src="~/Scripts/bootstrap-select.js"></script>
    <script src="~/ckeditor/ckeditor.js"></script>
    <script src="~/ckeditor/adapters/jquery.js"></script>



}


